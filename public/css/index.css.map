{"version":3,"sources":["..\\..\\node_modules\\bootstrap\\scss\\mixins\\_breakpoints.scss","..\\..\\resources\\sass\\index.scss","..\\..\\resources\\sass\\_variables.scss","index.css"],"names":[],"mappings":"AA+DI;ECzDA;IACI,kBCaW;IDZX,kBCeI;IDdJ,mBCcI;EClBV;EFMM;IACI,iBAAA;IACA,SCUA;ECdV;EFMU;IACI,0BAAA;EEJd;EFMc;IACI,eAAA;IACA,qBAAA;IACA,iBAAA;IACA,sBAAA;EEJlB;AACF;AH4CI;ECjCA;IACI,iBCVmB;ECEzB;EFUM;IACI,gBAAA;EERV;AACF;AHoCI;ECjBY;;;IAEI,mBAAA;EEflB;EFqBM;IACI,gBAAA;EEnBV;EFsBM;IACI,SAAA;EEpBV;AACF;AFwBA;EACI,0CAAA;AEtBJ;;AFyBA;EACI,gBAAA;EACA,aAAA;EACA,eAAA;EACA,8BAAA;EACA,YCnDK;AC6BT;AFwBI;EACI,qBAAA;EACA,WAAA;EACA,gBAAA;EACA,cAAA;EACA,2BAAA;AEtBR;AF0BY;EACI,uBAAA;AExBhB;AF6BY;EACI,wBAAA;AE3BhB;AF8BQ;EACI,cAAA;EACA,WAAA;EACA,iBAAA;EACA,kBAAA;EACA,yBAAA;EACA,sBAAA;EACA,uBAAA;EACA,YAAA;EACA,WAAA;AE5BZ;AF8BY;EACI,kBAAA;AE5BhB;AF+BY;EACI,kBAAA;EACA,SAAA;EACA,QAAA;EACA,4CAAA;EACA,iCAAA;EACA,iBAAA;EACA,kBAAA;EACA,yBAAA;EACA,gBAAA;AE7BhB;;AFmCA;EACI,WAAA;EACA,gBAAA;AEhCJ;AFkCI;EACI,kBAAA;AEhCR;AFmCI;EACI,cAAA;EACA,cAAA;AEjCR;AFyCY;;;EAEI,aAAA;AEtChB;;AF4CA;EACI,uBAAA;AEzCJ","file":"index.css","sourcesContent":["// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import \"~bootstrap/scss/functions\";\r\n@import \"~bootstrap/scss/variables\";\r\n@import \"~bootstrap/scss/mixins/breakpoints\";\r\n@import \"variables\";\r\n\r\n@include media-breakpoint-up(sm) {\r\n    div#app main[role=\"main\"] {\r\n        padding-top: $fixed-top-height;\r\n        padding-left: $gap-basic;\r\n        padding-right: $gap-basic;\r\n\r\n        div.admin-menu-big-buttons {\r\n            flex-wrap: nowrap;\r\n            gap: $gap-basic;\r\n\r\n            a {\r\n                width: calc(25% - ($gap-basic * 3 / 4));\r\n\r\n                div.big-button {\r\n                    padding: 5rem 0;\r\n                    margin-bottom: .5rem;\r\n                    border-width: 2px;\r\n                    border-top-width: 20px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(md) {\r\n    div#app .row main[role=\"main\"] {\r\n        padding-top: $fixed-top-height-desktop;\r\n\r\n        .latest-animals {\r\n            margin-top: 2rem;\r\n        }\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(lg) {\r\n    main div.latest-animals {\r\n        .table {\r\n\r\n            th,\r\n            td {\r\n\r\n                &:nth-child(4),\r\n                &:nth-child(6) {\r\n                    display: table-cell;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        h3 {\r\n            text-align: left;\r\n        }\r\n\r\n        button {\r\n            margin: 0;\r\n        }\r\n    }\r\n}\r\n\r\n#app main[role=\"main\"] {\r\n    padding: calc($fixed-top-height + $gap-sm) 0 $gap-sm 0;\r\n}\r\n\r\n.admin-menu-big-buttons {\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    gap: $gap-sm;\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #000;\r\n        overflow: hidden;\r\n        display: block;\r\n        width: calc(50% - ($gap-sm / 2));\r\n\r\n        &:nth-of-type(1),\r\n        &:nth-of-type(3) {\r\n            .big-button {\r\n                border-left-width: 20px;\r\n            }\r\n        }\r\n        &:nth-of-type(2),\r\n        &:nth-of-type(4) {\r\n            .big-button {\r\n                border-right-width: 20px;\r\n            }\r\n        }\r\n        .big-button {\r\n            display: block;\r\n            float: left;\r\n            padding: 1.5rem 0;\r\n            position: relative;\r\n            transition: all .2s ease;\r\n            border: 2px solid #CCC;\r\n            background-color: white;\r\n            z-index: 100;\r\n            width: 100%;\r\n\r\n            &:hover {\r\n                border-color: #999;\r\n            }\r\n\r\n            span {\r\n                position: absolute;\r\n                left: 50%;\r\n                top: 50%;\r\n                transform: translateX(-50%) translateY(-50%);\r\n                font-family: 'Nunito', sans-serif;\r\n                font-size: 1.5rem;\r\n                text-align: center;\r\n                text-transform: uppercase;\r\n                font-weight: 700;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.latest-animals {\r\n    clear: left;\r\n    margin-top: 1rem;\r\n\r\n    h3 {\r\n        text-align: center;\r\n    }\r\n\r\n    button {\r\n        display: block;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .table {\r\n\r\n        th,\r\n        td {\r\n\r\n            &:nth-child(4),\r\n            &:nth-child(6) {\r\n                display: none;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.btn-outline-secondary {\r\n    background-color: white;\r\n}","// Body\r\n$body-bg: #f8fafc;\r\n\r\n// Typography\r\n$font-family-sans-serif: \"Nunito\", sans-serif;\r\n$font-size-base: 0.9rem;\r\n$line-height-base: 1.6;\r\n\r\n// Colors\r\n$blue: #3490dc;\r\n$indigo: #6574cd;\r\n$purple: #9561e2;\r\n$pink: #f66D9b;\r\n$red: #e3342f;\r\n$orange: #f6993f;\r\n$yellow: #ffed4a;\r\n$green: #38c172;\r\n$teal: #4dc0b5;\r\n$cyan: #6cb2eb;\r\n\r\n$fixed-top-height: 136px;\r\n$fixed-top-height-desktop: 48px;\r\n$gap-sm: .75rem;\r\n$gap-basic: 1rem;\r\n","@media (min-width: 576px) {\n  div#app main[role=main] {\n    padding-top: 136px;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  div#app main[role=main] div.admin-menu-big-buttons {\n    flex-wrap: nowrap;\n    gap: 1rem;\n  }\n  div#app main[role=main] div.admin-menu-big-buttons a {\n    width: calc(25% - 0.75rem);\n  }\n  div#app main[role=main] div.admin-menu-big-buttons a div.big-button {\n    padding: 5rem 0;\n    margin-bottom: 0.5rem;\n    border-width: 2px;\n    border-top-width: 20px;\n  }\n}\n@media (min-width: 768px) {\n  div#app .row main[role=main] {\n    padding-top: 48px;\n  }\n  div#app .row main[role=main] .latest-animals {\n    margin-top: 2rem;\n  }\n}\n@media (min-width: 992px) {\n  main div.latest-animals .table th:nth-child(4), main div.latest-animals .table th:nth-child(6),\n  main div.latest-animals .table td:nth-child(4),\n  main div.latest-animals .table td:nth-child(6) {\n    display: table-cell;\n  }\n  main div.latest-animals h3 {\n    text-align: left;\n  }\n  main div.latest-animals button {\n    margin: 0;\n  }\n}\n#app main[role=main] {\n  padding: calc(136px + 0.75rem) 0 0.75rem 0;\n}\n\n.admin-menu-big-buttons {\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 0.75rem;\n}\n.admin-menu-big-buttons a {\n  text-decoration: none;\n  color: #000;\n  overflow: hidden;\n  display: block;\n  width: calc(50% - 0.375rem);\n}\n.admin-menu-big-buttons a:nth-of-type(1) .big-button, .admin-menu-big-buttons a:nth-of-type(3) .big-button {\n  border-left-width: 20px;\n}\n.admin-menu-big-buttons a:nth-of-type(2) .big-button, .admin-menu-big-buttons a:nth-of-type(4) .big-button {\n  border-right-width: 20px;\n}\n.admin-menu-big-buttons a .big-button {\n  display: block;\n  float: left;\n  padding: 1.5rem 0;\n  position: relative;\n  transition: all 0.2s ease;\n  border: 2px solid #CCC;\n  background-color: white;\n  z-index: 100;\n  width: 100%;\n}\n.admin-menu-big-buttons a .big-button:hover {\n  border-color: #999;\n}\n.admin-menu-big-buttons a .big-button span {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  font-family: \"Nunito\", sans-serif;\n  font-size: 1.5rem;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n}\n\n.latest-animals {\n  clear: left;\n  margin-top: 1rem;\n}\n.latest-animals h3 {\n  text-align: center;\n}\n.latest-animals button {\n  display: block;\n  margin: 0 auto;\n}\n.latest-animals .table th:nth-child(4), .latest-animals .table th:nth-child(6),\n.latest-animals .table td:nth-child(4),\n.latest-animals .table td:nth-child(6) {\n  display: none;\n}\n\n.btn-outline-secondary {\n  background-color: white;\n}"]}